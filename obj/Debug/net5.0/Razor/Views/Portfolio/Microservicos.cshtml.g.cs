#pragma checksum "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\Portfolio\Microservicos.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "024073e3a47ab7cf7b87069ed26cd08ed1747459"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Portfolio_Microservicos), @"mvc.1.0.view", @"/Views/Portfolio/Microservicos.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\_ViewImports.cshtml"
using PortfolioAbelCoreMvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\_ViewImports.cshtml"
using PortfolioAbelCoreMvc.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"024073e3a47ab7cf7b87069ed26cd08ed1747459", @"/Views/Portfolio/Microservicos.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2f8212a5b785b2a0b4f2f5ec9da2f9ebbaa84347", @"/Views/_ViewImports.cshtml")]
    public class Views_Portfolio_Microservicos : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\Portfolio\Microservicos.cshtml"
   ViewData["Title"] = "Microservicos"; 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div>
    <textarea readonly class=""tituloAreaCodigo"">
       Arquitetura de Microserviços
    </textarea>

    <p class=""areaTexto"">
        O forte acoplamento determinado nas arquiteturas monolíticas engessam todos os processos e quando
        um determinado processo renderizar em alta demanda todos os outros processos são afetados.<br />
        <br />
        Os monolítos podem comprometer a disponibilidade pelo alto acoplamento.<br />
        <br />
        Novas funcionalidades nos aplicativos só enriquecem este cenário de complexidade.<br />
        <br />
        Pensando em enfraquecer este acoplamento e por consequência minimizar os efeitos de
        uma falha, a arquitetura de Microserviços aparece como solução muito utilizada por empresas.<br />
        <br />
        A arquitetura de Microsistemas propõe criar componentes separados e independentes que são executados 
        como serviços através de API´s.<br />
        <br />
        Aqui também me faz lembrar o princío S");
            WriteLiteral(@"OLID da responsabilidade única pois cada componente de microserviço 
        se responsabiliza somente pelo seu processo sem impactar outros.<br />
        Microserviços oferecem maior escalabilidade, fácil implementação e produtividades concorrentes responsáveis,
        entre outros benefícios.<br />
        <br />
        Mais uma tecnologia para meu cardápio autodidata de estudos.
        <br />
        <br />
    </p>
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
