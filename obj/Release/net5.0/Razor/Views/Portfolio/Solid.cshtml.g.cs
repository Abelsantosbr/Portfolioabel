#pragma checksum "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\Portfolio\Solid.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "361b5c6bb2974ba73fa56094291d4e4362b4ba86"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Portfolio_Solid), @"mvc.1.0.view", @"/Views/Portfolio/Solid.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\_ViewImports.cshtml"
using PortfolioAbelCoreMvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\_ViewImports.cshtml"
using PortfolioAbelCoreMvc.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"361b5c6bb2974ba73fa56094291d4e4362b4ba86", @"/Views/Portfolio/Solid.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2f8212a5b785b2a0b4f2f5ec9da2f9ebbaa84347", @"/Views/_ViewImports.cshtml")]
    public class Views_Portfolio_Solid : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\Portfolio\Solid.cshtml"
   ViewData["Title"] = "Solid"; 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div>
    <textarea readonly class=""tituloAreaCodigo"">
       Princípios S.O.L.I.D.
    </textarea>

    <p  class=""areaTexto"">
        A Programação Orientada a Objetos - POO, tráz em si 5 princípios de desenvolvimento de software que contribuem com sua manutenção e sustentação.<br />
        Estes princípios ajudam na construção de códigos limpos (Clean Code), responsabilidades únicas, refatoração fácil, fraco acoplamento e reaproveitamento de código.<br />
        
        Pretendo também em novas experiências aplicar estes princípios em conexão com Clean Clode.<br />
        
        Quando desenvolvo com o projeto MVC me lembro do princípio SOLID chamado de responsabilidade única que estabelece única responsabilidade no que se propõe, se limitar unicamente à tarefa.<br />
        Utilizar interfaces na manutenção de métodos evita bugs pois não está alterando a classe original. Este é outro princípio muito interessante, princípio Aberto-Fechado, quando uma classe deve ser
        antes fech");
            WriteLiteral(@"ada e depois ser estendida como interface.<br />
        <br />

        Enfim, estudar e praticar cada vez mais estes princípios produz qualidade, elegancia, clareza, otimização e escalabilidade garantida.<br />
        <br />
        <br />

        
    </p>
</div>}
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
