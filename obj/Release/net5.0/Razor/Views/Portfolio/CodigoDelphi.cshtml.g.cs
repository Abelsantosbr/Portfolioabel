#pragma checksum "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\Portfolio\CodigoDelphi.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4c34a2fa7536de6bde94af0184a0127ee9672c71"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Portfolio_CodigoDelphi), @"mvc.1.0.view", @"/Views/Portfolio/CodigoDelphi.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\_ViewImports.cshtml"
using PortfolioAbelCoreMvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\_ViewImports.cshtml"
using PortfolioAbelCoreMvc.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4c34a2fa7536de6bde94af0184a0127ee9672c71", @"/Views/Portfolio/CodigoDelphi.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2f8212a5b785b2a0b4f2f5ec9da2f9ebbaa84347", @"/Views/_ViewImports.cshtml")]
    public class Views_Portfolio_CodigoDelphi : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "C:\VS_2019_portfolio_abel\PortfolioAbelCoreMvc\Views\Portfolio\CodigoDelphi.cshtml"
   ViewData["Title"] = "CodigoDelphi"; 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div>
    <textarea readonly class=""tituloAreaCodigo"">
       Código Delphi (última versão 2010) extraído de projeto desenvolvido há mais de 25 anos, sustentado até 08/2021.
       Programação procedural com interface de usuário e acesso a banco de dados SQl Server
    </textarea>
    <textarea readonly class=""areaCodigo"">
unit Form_cad_rateios;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  Buttons, StdCtrls, ExtCtrls, Mask, Grids, DBGrids, Db, DBTables, DBIProcs,
  DBCtrls, ComCtrls, QuickRpt, Qrctrls, CheckLst;

type
  TFrm_cad_rateios = class(TForm)
    pn_cabec: TPanel;
    lb_titulo1: TLabel;
    lb_titulo2: TLabel;
    grbx_reg_rateio: TGroupBox;
    tbl_cond: TTable;
    ds_cond: TDataSource;
    sbtn_fechar: TSpeedButton;
    Label1: TLabel;
    mskedt_num_emissao: TMaskEdit;
    sbtn_ok_reg_rat: TSpeedButton;
    grbx_det_rat_geral: TGroupBox;
    grbx_det_verb: TGroupBox;
    tbl_rat_prin: TTable;
    ds_rat_prin: TData");
            WriteLiteral(@"Source;
    tbl_det_rat: TTable;
    ds_det_rat: TDataSource;
    ds_verb: TDataSource;
    tbl_rat_prinCOD_COND: TStringField;
    tbl_rat_prinNUM_EMISSAO: TSmallintField;
    tbl_rat_prinDT_EMISSAO: TDateField;
    tbl_rat_prinDT_VENCTO: TDateField;
    tbl_det_ratCOD_COND: TStringField;
    tbl_det_ratNUM_EMISSAO: TSmallintField;
    tbl_det_ratSEQ_ITEM_RAT: TSmallintField;
    tbl_det_ratREF_ITEM_RAT: TStringField;
    tbl_det_ratVL_ITEM_RAT: TFloatField;
    tbl_det_ratOP_RATEIO: TSmallintField;
    tbl_det_ratNOME_OP_RATEIO: TStringField;
    sbtn_incluir_geral: TSpeedButton;
    sbtn_incluir_verb: TSpeedButton;
    dbg_rat_geral: TDBGrid;
    dbg_verb: TDBGrid;
    lstbx_rateio: TListBox;
    lbl_op_rateio: TLabel;
    tbl_mor: TTable;
    ds_mor: TDataSource;
    sbtn_mov_op_rateio: TSpeedButton;
    dbg_rat_prin: TDBGrid;
    tbl_verb: TTable;
    tbl_verbCOD_COND: TStringField;
    tbl_verbNUM_EMISSAO: TSmallintField;
    tbl_verbUNID_VERB: TStringField;
    tbl_verbREF_");
            WriteLiteral(@"ITEM_VERB: TStringField;
    tbl_verbVL_ITEM_VERB: TFloatField;
    tbl_verbnome_inquilino: TStringField;
    tbl_boletos: TTable;
    ds_boletos: TDataSource;
    tbl_unid: TTable;
    ds_unid: TDataSource;
    tbl_unidMNEM_COND: TStringField;
    tbl_unidID_UNID: TStringField;
    tbl_unidFRA1_UNID: TFloatField;
    tbl_unidFRA2_UNID: TFloatField;
    tbl_unidFRA3_UNID: TFloatField;
    tbl_unidESPEC_UNID: TStringField;
    tbl_unidUND1_VINC: TStringField;
    tbl_unidUND2_VINC: TStringField;
    tbl_unidUND3_VINC: TStringField;
    tbl_det_bole: TTable;
    ds_det_bole: TDataSource;
    tbl_det_boleNUM_EMISSAO: TSmallintField;
    tbl_det_boleCOD_COND: TStringField;
    tbl_det_boleBLOCO: TStringField;
    tbl_det_boleSEQ_ITEM: TSmallintField;
    tbl_det_boleHIST_ITEM: TStringField;
    tbl_det_boleVL_ITEM: TFloatField;
    tbl_verbSEQ_ITEM_VERB: TSmallintField;
    tbl_boletosNUM_EMISSAO: TSmallintField;
    tbl_boletosCOD_COND: TStringField;
    tbl_boletosBLOCO: TStringField;");
            WriteLiteral(@"
    tbl_boletosUNID: TSmallintField;
    tbl_boletosCOD_EMISSAO: TSmallintField;
    tbl_boletosUNID_EDF: TStringField;
    tbl_boletosNUM_SEQUENCIA: TStringField;
    tbl_boletosNUM1_TITULO: TFloatField;
    tbl_boletosNUM2_TITULO: TFloatField;
    tbl_boletosDT_VENCTO: TDateField;
    tbl_boletosDT_EMISSAO: TDateField;
    tbl_boletosVL_TITULO: TFloatField;
    tbl_boletosVL_MULTA: TFloatField;
    tbl_boletosPG_MULTA: TFloatField;
    tbl_boletosPG_CM: TFloatField;
    tbl_boletosPG_JUROS: TFloatField;
    tbl_boletosDESC_AUTORIZ: TFloatField;
    tbl_boletosDT_PGTO: TDateField;
    tbl_det_ratPERC_MULTA: TFloatField;
    tbl_verbPERC_MULTA: TFloatField;
    tbl_rat_prinRATEADO: TStringField;
    grbx_op_arred: TGroupBox;
    tbl_rat_prinBLOQUEADO: TStringField;
    rdbt_arred_nenhum: TRadioButton;
    rdbt_arred_despr_cent: TRadioButton;
    rdbt_arred_mais: TRadioButton;
    tbl_boletosTIPO_PGT: TStringField;
    rdbt_arred_para_um: TRadioButton;
    tbl_det_boleUNID: TSmallint");
            WriteLiteral(@"Field;
    tbl_pagar: TTable;
    ds_pagar: TDataSource;
    tbl_pagarNUM_LANC: TFloatField;
    tbl_pagarMNEM_COND: TStringField;
    tbl_pagarDATA_LANC: TDateField;
    tbl_pagarCOD_CTA_GRUPO: TSmallintField;
    tbl_pagarCOD_SUBCTA_GRUPO: TSmallintField;
    tbl_pagarCOD_ITEM_CONTA: TSmallintField;
    tbl_pagarCOMPL_LANC: TStringField;
    tbl_pagarVALOR_LANC: TFloatField;
    tbl_pagarNUM_CHEQUE: TFloatField;
    tbl_pagarSTATUS_LANC: TStringField;
    tbl_det_boleNUM_LANC_CP: TFloatField;
    tbl_det_ratCOD_CTA_GRUPO: TSmallintField;
    tbl_det_ratCOD_SUBCTA_GRUPO: TSmallintField;
    tbl_verbCOD_CTA_GRUPO: TSmallintField;
    tbl_verbCOD_SUBCTA_GRUPO: TSmallintField;
    tbl_det_boleCOD_CTA_GRUPO: TSmallintField;
    tbl_det_boleCOD_SUBCTA_GRUPO: TSmallintField;
    tbl_grupo: TTable;
    ds_grupo: TDataSource;
    tbl_grupoCOD_CTA_GRUPO: TSmallintField;
    tbl_grupoNOME_CONTA_GRUPO: TStringField;
    tbl_sub_grupo: TTable;
    ds_sub_grupo: TDataSource;
    tbl_sub_grupoCOD");
            WriteLiteral(@"_SUBCTA_GRUPO: TSmallintField;
    tbl_sub_grupoCOD_CTA_GRUPO: TSmallintField;
    tbl_sub_grupoNOME_SUBCTA_GRUPO: TStringField;
    GroupBox1: TGroupBox;
    edt_item_conta_det: TEdit;
    GroupBox2: TGroupBox;
    edt_item_conta_verb: TEdit;
    tbl_condMNEM_COND: TStringField;
    tbl_condNOME_COND: TStringField;
    tbl_condENDE_COND: TStringField;
    tbl_condBAIR_COND: TStringField;
    tbl_condCIDA_COND: TStringField;
    tbl_condESTA_COND: TStringField;
    tbl_condCEP_COND: TStringField;
    tbl_condCONT_COND: TStringField;
    tbl_condFONE_COND: TStringField;
    tbl_condFAX_COND: TStringField;
    tbl_condN_PREDIOS: TSmallintField;
    tbl_condN_PAVIM: TSmallintField;
    tbl_condN_UNID: TSmallintField;
    tbl_condCC1_COND: TFloatField;
    tbl_condDVCC1_COND: TStringField;
    tbl_condBC1_COND: TSmallintField;
    tbl_condDVBC1_COND: TStringField;
    tbl_condAG1_COND: TSmallintField;
    tbl_condDVAG1_COND: TStringField;
    tbl_condCC2_COND: TFloatField;
    tbl_condD");
            WriteLiteral(@"VCC2_COND: TStringField;
    tbl_condBC2_COND: TSmallintField;
    tbl_condDVBC2_COND: TStringField;
    tbl_condAG2_COND: TSmallintField;
    tbl_condDVAG2_COND: TStringField;
    tbl_condCC3_COND: TFloatField;
    tbl_condDVCC3_COND: TStringField;
    tbl_condBC3_COND: TSmallintField;
    tbl_condDVBC3_COND: TStringField;
    tbl_condAG3_COND: TSmallintField;
    tbl_condDVAG3_COND: TStringField;
    tbl_condCOD_MOEDA: TStringField;
    tbl_condSIMB_MOEDA: TStringField;
    tbl_condBLOCO_SIND: TStringField;
    tbl_condUNID_SIND: TSmallintField;
    tbl_condTITULAR_CC: TStringField;
    Rdbt_arred_50_cent: TRadioButton;
    tbl_det_ratOP_ARRED: TSmallintField;
    tbl_det_ratNOME_OP_ARRED: TStringField;
    tbl_rat_prinOP_ARRED: TSmallintField;
    lbl_processando: TLabel;
    Mskedt_proc_unid: TMaskEdit;
    tbl_det_ratEXCE_1: TStringField;
    tbl_det_ratVALOR_EXCE_1: TStringField;
    tbl_det_ratEXCE_2: TStringField;
    tbl_det_ratVALOR_EXCE_2: TStringField;
    tbl_det_ratEXCE");
            WriteLiteral(@"_3: TStringField;
    tbl_det_ratVALOR_EXCE_3: TStringField;
    sbtn_moverConta1: TSpeedButton;
    q_rat_copia: TQuery;
    dsq_rat_copia: TDataSource;
    q_rat_copiaCOD_COND: TStringField;
    q_rat_copiaNUM_EMISSAO: TSmallintField;
    q_rat_copiaSEQ_ITEM_RAT: TSmallintField;
    q_rat_copiaCOD_CTA_GRUPO: TSmallintField;
    q_rat_copiaCOD_SUBCTA_GRUPO: TSmallintField;
    q_rat_copiaREF_ITEM_RAT: TStringField;
    q_rat_copiaVL_ITEM_RAT: TFloatField;
    q_rat_copiaOP_ARRED: TSmallintField;
    q_rat_copiaNOME_OP_ARRED: TStringField;
    q_rat_copiaPERC_MULTA: TFloatField;
    q_rat_copiaOP_RATEIO: TSmallintField;
    q_rat_copiaNOME_OP_RATEIO: TStringField;
    q_rat_copiaEXCE_1: TStringField;
    q_rat_copiaVALOR_EXCE_1: TStringField;
    q_rat_copiaEXCE_2: TStringField;
    q_rat_copiaVALOR_EXCE_2: TStringField;
    q_rat_copiaEXCE_3: TStringField;
    q_rat_copiaVALOR_EXCE_3: TStringField;
    q_verb_copia: TQuery;
    Dsq_verb_copia: TDataSource;
    q_verb_copiaCOD_COND: T");
            WriteLiteral(@"StringField;
    q_verb_copiaNUM_EMISSAO: TSmallintField;
    q_verb_copiaUNID_VERB: TStringField;
    q_verb_copiaSEQ_ITEM_VERB: TSmallintField;
    q_verb_copiaCOD_CTA_GRUPO: TSmallintField;
    q_verb_copiaCOD_SUBCTA_GRUPO: TSmallintField;
    q_verb_copiaREF_ITEM_VERB: TStringField;
    q_verb_copiaVL_ITEM_VERB: TFloatField;
    q_verb_copiaPERC_MULTA: TFloatField;
    Lbl_imp: TQRLabel;
    tbl_rat_prinMENS1_BOL: TStringField;
    tbl_rat_prinMENS2_BOL: TStringField;
    tbl_rat_prinMENS3_BOL: TStringField;
    Cbx_cond: TComboBox;
    Dbedt_nome_cond: TDBEdit;
    Dbedt_N_Unid: TDBEdit;
    Label2: TLabel;
    sbtn_incl_unid_vinc: TSpeedButton;
    Grbx_unid_vinc: TGroupBox;
    lbl_vl_unid_vinc: TLabel;
    lbl_conta_unid_vincc: TLabel;
    lbl_hist_unid_vinc: TLabel;
    sbtn_mover_conta_unid_vinc: TSpeedButton;
    lbl_perc_multa_unid_vinc: TLabel;
    sbtn_ok_incluir_unid_vinc: TSpeedButton;
    Label3: TLabel;
    mskedt_vl_unid_vinc: TMaskEdit;
    mskedt_cod_cta_unid_vi");
            WriteLiteral(@"nc: TMaskEdit;
    mskedt_nome_conta_unid_vinc: TMaskEdit;
    mskedt_hist_unid_vinc: TMaskEdit;
    mskedt_perc_multa_unid_vinc: TMaskEdit;
    chkbx_mult_fr3: TCheckBox;
    mskedt_cod_subcta_unid_vinc: TMaskEdit;
    btn_del_verb: TBitBtn;
    sbtn_ok_rateio: TSpeedButton;
    ProgressBar1: TProgressBar;
    mskedt_andamento: TMaskEdit;
    Label4: TLabel;
    tbl_boletosNUM_LANC_CP: TFloatField;
    tbl_boletosNUM_LOTE: TFloatField;
    tbl_boletosDATA_PREV_CR: TDateField;
    tbl_boletosACORDO: TStringField;
    tbl_boletosDV_TITULO: TStringField;
    tbl_num_lanc: TTable;
    tbl_num_lancULT_NUM_LANC: TFloatField;
    ds_num_lanc: TDataSource;
    tbl_morMNEM_COND: TStringField;
    tbl_morBLOCO: TStringField;
    tbl_morUNIDADE: TFloatField;
    tbl_morORD_MOR: TSmallintField;
    tbl_morID_UNID: TStringField;
    tbl_morNOME_MOR: TStringField;
    tbl_morFONER_MOR: TStringField;
    tbl_morFONEE_MOR: TStringField;
    tbl_morFONEC_MOR: TStringField;
    tbl_morFONEF_MOR: TS");
            WriteLiteral(@"tringField;
    tbl_morEMAIL1_MOR: TStringField;
    tbl_morEMAIL2_MOR: TStringField;
    tbl_morEMAIL3_MOR: TStringField;
    tbl_morEMAIL4_MOR: TStringField;
    tbl_morRG_MOR: TStringField;
    tbl_morCIC_MOR: TStringField;
    tbl_morDATAI_MOR: TDateField;
    tbl_morDATAF_MOR: TDateField;
    tbl_condNOME_BC1_COND: TStringField;
    tbl_condCOD_CEDENTE_BC1: TFloatField;
    tbl_condNOME_BC2_COND: TStringField;
    tbl_condCOD_CEDENTE_BC2: TFloatField;
    tbl_condNOME_BC3_COND: TStringField;
    tbl_condCOD_CEDENTE_BC3: TFloatField;
    tbl_condCART_COBR_BC1: TSmallintField;
    tbl_condCART_COBR_BC2: TSmallintField;
    tbl_condCART_COBR_BC3: TSmallintField;
    tbl_condMENS1: TStringField;
    tbl_condMENS2: TStringField;
    tbl_condCNPJ: TStringField;
    tbl_condNUM_COND_ATHOS: TFloatField;
    sbtn_abrir_contas_moradores: TSpeedButton;
    sbtn_fechar_unid_vinc: TSpeedButton;
    procedure sbtn_fecharClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    ");
            WriteLiteral(@"procedure sbtn_ok_reg_ratClick(Sender: TObject);
    procedure sbtn_incluir_geralClick(Sender: TObject);
    procedure tbl_rat_prinAfterPost(DataSet: TDataSet);
    procedure tbl_det_ratAfterPost(DataSet: TDataSet);
    procedure sbtn_mov_op_rateioClick(Sender: TObject);
    procedure sbtn_sel_inquilinoClick(Sender: TObject);
    procedure sbtn_incluir_verbClick(Sender: TObject);
    procedure tbl_verbCalcFields(DataSet: TDataSet);
    procedure tbl_verbAfterPost(DataSet: TDataSet);
    procedure tbl_verbAfterScroll(DataSet: TDataSet);
    procedure tbl_det_ratAfterScroll(DataSet: TDataSet);
    procedure sbtn_ok_rateioClick(Sender: TObject);
    procedure tbl_boletosAfterPost(DataSet: TDataSet);
    procedure tbl_unidAfterPost(DataSet: TDataSet);
    procedure rdbt_arred_nenhumClick(Sender: TObject);
    procedure rdbt_arred_despr_centClick(Sender: TObject);
    procedure rdbt_arred_maisClick(Sender: TObject);
    procedure tbl_rat_prinAfterScroll(DataSet: TDataSet);
    procedure rdbt_arre");
            WriteLiteral(@"d_para_umClick(Sender: TObject);
    procedure sbtn_moverConta1Click(Sender: TObject);
    procedure Rdbt_arred_50_centClick(Sender: TObject);
    procedure Cbx_condClick(Sender: TObject);
    procedure sbtn_mover_conta_unid_vincClick(Sender: TObject);
    procedure sbtn_incl_unid_vincClick(Sender: TObject);
    procedure sbtn_ok_incluir_unid_vincClick(Sender: TObject);
    procedure mskedt_vl_unid_vincExit(Sender: TObject);
    procedure mskedt_perc_multa_unid_vincExit(Sender: TObject);
    procedure btn_del_verbClick(Sender: TObject);
    procedure tbl_num_lancAfterPost(DataSet: TDataSet);
    procedure sbtn_abrir_contas_moradoresClick(Sender: TObject);
    procedure sbtn_fechar_unid_vincClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_cad_rateios: TFrm_cad_rateios;
  num_botao : Integer;

implementation

uses Form_sel_contas_inquilinos;

{$R *.DFM}

procedure TFrm_cad_rateios.sbtn_abrir_contas_moradoresClick(S");
            WriteLiteral(@"ender: TObject);
begin
     num_botao:=2;
     Frm_sel_contas_inquilinos.dbg_mor.Visible:=true;
     Frm_sel_contas_inquilinos.sbtn_sel_inquilino.visible:=true;
     Frm_sel_contas_inquilinos.Showmodal;
end;

procedure TFrm_cad_rateios.sbtn_fecharClick(Sender: TObject);
begin
    tbl_cond.close;
    tbl_rat_prin.close;
    tbl_det_rat.close;
    tbl_verb.close;
    tbl_mor.close;
    tbl_boletos.close;
    tbl_unid.close;
    tbl_det_bole.Close;
    tbl_pagar.close;
    tbl_num_lanc.close;
    tbl_grupo.close;
    tbl_sub_grupo.close;
    close;
end;

procedure TFrm_cad_rateios.sbtn_fechar_unid_vincClick(Sender: TObject);
begin
     grbx_unid_vinc.visible:=false;;
end;

procedure TFrm_cad_rateios.FormActivate(Sender: TObject);
begin
     num_botao:=0;
     tbl_cond.open;
     tbl_rat_prin.open;
     tbl_det_rat.open;
     tbl_verb.open;
     tbl_mor.open;
     tbl_boletos.open;
     tbl_unid.open;
     tbl_det_bole.open;
     tbl_pagar.open;
     tbl_num_lanc.open;
 ");
            WriteLiteral(@"    tbl_grupo.open;
     tbl_sub_grupo.open;
     mskedt_num_emissao.text:=IntToStr(tbl_rat_prinNum_emissao.AsInteger);
     while not Tbl_cond.Eof do
          begin
              Cbx_cond.Items.Add(Tbl_cond.FieldByName('Mnem_cond').AsString);
              Tbl_cond.Next;
          end;
     tbl_cond.first;
     Cbx_cond.ItemIndex:=0;

end;

procedure TFrm_cad_rateios.sbtn_ok_reg_ratClick(Sender: TObject);
begin
    If not tbl_rat_prin.findkey([tbl_condMnem_cond.AsString,mskedt_num_emissao.Text]) then
       begin
                showMessage('Registro Não Encontrado. Se Desejar criar, pressione o botão Incluir.');
       end
    else
       mskedt_num_emissao.text:=IntToStr(tbl_rat_prinNum_emissao.AsInteger);
end;

procedure TFrm_cad_rateios.sbtn_incluir_geralClick(Sender: TObject);
var
   vnum_emissao : Integer;
begin
    if (mskedt_num_emissao.Text='') or
       (mskedt_num_emissao.Text='0') then
       begin
           showmessage('Informe o Número de Emissão');
           m");
            WriteLiteral(@"skedt_num_emissao.setfocus;
       end
    else
       begin
            vnum_emissao:=StrToInt(mskedt_num_emissao.Text);
            if not tbl_rat_prin.FindKey([tbl_condMnem_cond.AsString, vnum_emissao]) then
                   begin
                        tbl_rat_prin.insert;
                        tbl_rat_prinNum_emissao.AsInteger:=vnum_emissao;
                        tbl_rat_prinCod_cond.AsString:=tbl_condMnem_cond.AsString;
                        tbl_rat_prin.post;
                   end;
            tbl_det_rat.insert;
            tbl_det_ratNum_emissao.AsInteger:=StrToInt(mskedt_num_emissao.Text);
            tbl_det_ratCod_cond.AsString:=tbl_condMnem_cond.AsString;
            tbl_det_ratOP_arred.asInteger:=1;
            tbl_det_ratNome_op_arred.asString:=rdbt_arred_nenhum.caption;
            rdbt_arred_nenhum.checked:=true;
            tbl_det_rat.post;
       end;
end;

procedure TFrm_cad_rateios.tbl_rat_prinAfterPost(DataSet: TDataSet);
begin
     DBISaveChanges(tbl_r");
            WriteLiteral(@"at_prin.handle); {Grava buffers ao mudar de registro}
end;

procedure TFrm_cad_rateios.tbl_det_ratAfterPost(DataSet: TDataSet);
begin
     DBISaveChanges(tbl_det_rat.handle); {Grava buffers ao mudar de registro}
end;

procedure TFrm_cad_rateios.tbl_verbAfterPost(DataSet: TDataSet);
begin
     DBISaveChanges(tbl_verb.handle); {Grava buffers ao mudar de registro}
end;

procedure TFrm_cad_rateios.sbtn_mov_op_rateioClick(Sender: TObject);
begin
     tbl_det_rat.edit;
     tbl_det_ratOp_rateio.AsInteger:=lstbx_rateio.ItemIndex+1;
     tbl_det_ratNome_op_rateio.AsString:=copy(lstbx_rateio.Items.Strings[lstbx_rateio.ItemIndex],5,30);
end;

procedure TFrm_cad_rateios.sbtn_sel_inquilinoClick(Sender: TObject);
begin
     tbl_verb.edit;
     tbl_verbUnid_verb.AsString:=tbl_morId_unid.AsString;
     tbl_verb.FieldByName('nome_inquilino').value:=tbl_morNome_mor.AsString;
     dbg_verb.Refresh;
end;

procedure TFrm_cad_rateios.sbtn_incluir_verbClick(Sender: TObject);
begin
    tbl_verb.insert;");
            WriteLiteral(@"
    tbl_verbNum_emissao.AsInteger:=tbl_rat_prinNum_emissao.AsInteger;
    tbl_verbCod_cond.AsString:=tbl_rat_prinCod_cond.AsString;
    tbl_verb.post;
end;

procedure TFrm_cad_rateios.tbl_verbCalcFields(DataSet: TDataSet);
begin
     if not tbl_mor.active then
        tbl_mor.open;
     if tbl_mor.FindKey([tbl_verbCod_cond.AsString,tbl_verbUnid_verb.asString]) then
        tbl_verb.FieldByName('nome_inquilino').value:=tbl_morNome_mor.AsString
     else
        tbl_verb.FieldByName('nome_inquilino').value:='??????';
end;

procedure TFrm_cad_rateios.tbl_verbAfterScroll(DataSet: TDataSet);
var
   vbloco, v1, v2 : string;
   vunid  : integer;
begin
     if tbl_verb.recordCount=0 then
        btn_del_verb.visible:=false
     else
        btn_del_verb.visible:=true;
     if tbl_verbUnid_verb.AsString<>'' then
        begin
           tbl_verb.edit;
           vbloco:=copy(tbl_verbUnid_verb.asString,1,1);
           vunid:=StrToInt(copy(tbl_verbUnid_verb.AsString,2,5));
           if t");
            WriteLiteral(@"bl_mor.FindKey([tbl_verbCod_cond.AsString,vbloco,vunid]) then
              tbl_verb.FieldByName('nome_inquilino').value:=tbl_morNome_mor.AsString
           else
              tbl_verb.FieldByName('nome_inquilino').value:='??????';
        end;
     tbl_sub_grupo.close;
     tbl_sub_grupo.IndexName:='CTA_SUBCTA';
     if not tbl_grupo.active then
            tbl_grupo.open;
     if not tbl_sub_grupo.active then
            tbl_sub_grupo.open;
     if tbl_grupo.Findkey([tbl_verbCod_cta_grupo.AsInteger]) then
        v1:=tbl_grupoNome_conta_grupo.asString
     else
        v1:='????';
      if tbl_sub_grupo.Findkey([tbl_verbCod_cta_grupo.AsInteger,tbl_verbCod_subcta_grupo.AsInteger]) then
        v2:=tbl_sub_grupoNome_subcta_grupo.asString
     else
        v2:='????';
     edt_item_conta_verb.text:=v1+'/'+v2;
     tbl_sub_grupo.close;
     tbl_sub_grupo.MasterFields:='COD_CTA_GRUPO';
     tbl_sub_grupo.Open;
end;

procedure TFrm_cad_rateios.tbl_det_ratAfterScroll(DataSet: TDataSet);
");
            WriteLiteral(@"var
   v1,v2 : string;
begin
     rdbt_arred_nenhum.checked:=false;
     rdbt_arred_despr_cent.checked:=false;
     rdbt_arred_mais.checked:=false;
     rdbt_arred_para_um.checked:=false;
     rdbt_arred_50_cent.checked:=false;
     if tbl_det_ratOp_arred.asInteger=1 then
        rdbt_arred_nenhum.checked:=true;
     if tbl_det_ratOp_arred.asInteger=2 then
        rdbt_arred_despr_cent.checked:=true;
     if tbl_det_ratOp_arred.asInteger=3 then
        rdbt_arred_mais.checked:=true;
     if tbl_det_ratOp_arred.asInteger=4 then
        rdbt_arred_para_um.checked:=true;
     if tbl_det_ratOp_arred.asInteger=5 then
        rdbt_arred_50_cent.checked:=true;
     mskedt_num_emissao.text:=IntToStr(tbl_rat_prinNum_emissao.AsInteger);
     tbl_sub_grupo.close;
     tbl_sub_grupo.IndexName:='CTA_SUBCTA';
     if not tbl_grupo.active then
            tbl_grupo.open;
     if not tbl_sub_grupo.active then
            tbl_sub_grupo.open;
     if tbl_grupo.Findkey([tbl_det_ratCod_cta_grupo.AsIntege");
            WriteLiteral(@"r]) then
        v1:=tbl_grupoNome_conta_grupo.asString
     else
        v1:='????';
      if tbl_sub_grupo.Findkey([tbl_det_ratCod_cta_grupo.AsInteger,tbl_det_ratCod_subcta_grupo.AsInteger]) then
        v2:=tbl_sub_grupoNome_subcta_grupo.asString
     else
        v2:='????';
     edt_item_conta_det.text:=v1+'/'+v2;
     tbl_sub_grupo.close;
     tbl_sub_grupo.MasterFields:='COD_CTA_GRUPO';
     tbl_sub_grupo.Open;
end;

procedure TFrm_cad_rateios.sbtn_ok_rateioClick(Sender: TObject);
var
   vbloco, strvalor : string;
   ult_lanc : integer;
   vvl_titulo, vvl_item, vvl_multa : Extended;
   vnum_seq, i, vunid, veste_tit, vtot_tit : integer;
   vgravadet : boolean;
   vacordo : string;
begin
      vtot_tit:=tbl_condN_Unid.asInteger;
      veste_tit:=0;
      i:=0;
      vacordo:='N';
      ProgressBar1.Min:=0;
      ProgressBar1.Max:=tbl_CondN_Unid.asInteger;
      tbl_unid.FindKey([tbl_condMnem_cond.AsString]);
      while (tbl_unidMnem_cond.AsString=tbl_condMnem_cond.AsString)");
            WriteLiteral(@" and
            (not tbl_unid.eof)  do
          begin
               vbloco:=copy(tbl_unidId_unid.AsString,1,1);
               vunid:=StrToInt(copy(tbl_unidId_unid.AsString,2,5));
               mskedt_proc_unid.Text:=vbloco+IntToStr(vunid);
               mskedt_proc_unid.Refresh;
               if tbl_boletos.FindKey([mskedt_num_emissao.Text,tbl_condMnem_cond.AsString,vbloco,vunid]) then
                  begin
                      showmessage('Título Já Existe !!! - Emissão '+mskedt_num_emissao.Text+'/'+vbloco+IntToStr(vunid));
                  end
               else
                  begin
                       vacordo:='N';
                       tbl_boletos.insert;
                       tbl_boletosNum_emissao.AsInteger:=tbl_rat_prinNum_emissao.AsInteger;
                       tbl_boletosCod_cond.AsString:=tbl_rat_prinCod_cond.AsString;
                       tbl_boletosBloco.AsString:=vbloco;
                       tbl_boletosUnid.AsInteger:=vunid;
                       tbl_");
            WriteLiteral(@"boletosCod_emissao.AsInteger:=tbl_rat_prinNum_emissao.AsInteger;
                       tbl_boletosUnid_edf.AsString:=tbl_unidId_unid.AsString;
                       tbl_boletosDt_vencto.AsDateTime:=tbl_rat_prinDt_vencto.AsDateTime;
                       tbl_boletosDt_emissao.AsDateTime:=tbl_rat_prinDt_emissao.AsDateTime;
                       tbl_det_rat.FindKey([tbl_rat_prinCod_cond.AsString,tbl_rat_prinNum_emissao.AsInteger]);
                       vvl_titulo:=0;
                       vnum_seq:=0;
                       vvl_multa:=0;
                       vvl_item:=0;
                       if i=0 then
                          begin
                               tbl_rat_prin.edit;
                               tbl_rat_prinRateado.AsString:='S';
                               tbl_rat_prinMens1_bol.AsString:=tbl_condMens1.asString;
                               tbl_rat_prinMens1_bol.AsString:=tbl_condMens1.asString;
                               tbl_rat_prin.post;
                 ");
            WriteLiteral(@"         end;
                       while (tbl_det_ratCod_cond.AsString=tbl_rat_prinCod_cond.AsString) and
                             (tbl_det_ratNum_emissao.AsInteger=tbl_rat_prinNum_emissao.AsInteger) and
                             (not tbl_det_rat.Eof) do
                             begin
                                  if (tbl_det_ratExce_1.asString='') and
                                      (tbl_det_ratExce_2.asString='') and
                                      (tbl_det_ratExce_3.AsSTring='') then
                                      begin
                                          vgravadet:=true;
                                      end
                                  else
                                      begin
                                           vgravadet:=true;
                                           If tbl_det_ratExce_1.AsString='FR1' then
                                               begin
                                                    if FloatTo");
            WriteLiteral(@"Str(tbl_unidFra1_unid.asFloat)=tbl_det_ratValor_exce_1.asString then
                                                        begin
                                                             vgravadet:=false;
                                                        end;
                                               end;
                                           If ((vgravadet) and (tbl_det_ratExce_2.AsString='FR1')) then
                                               begin
                                                     if (FloatToStr(tbl_unidFra1_unid.asFloat)=tbl_det_ratValor_exce_2.asString) then
                                                        begin
                                                             vgravadet:=false;
                                                        end;
                                               end;
                                           If ((vgravadet) and (tbl_det_ratExce_3.AsString='FR1')) then
                                       ");
            WriteLiteral(@"        begin
                                                     if (FloatToStr(tbl_unidFra1_unid.asFloat)=tbl_det_ratValor_exce_3.asString) then
                                                        begin
                                                             vgravadet:=false;
                                                        end;
                                               end;
                                           If ((vgravadet) and (tbl_det_ratExce_1.AsString='ESPC')) then
                                               begin
                                                    If tbl_unidEspec_unid.asString=tbl_det_ratValor_exce_1.asString then
                                                       begin
                                                            vgravadet:=false;
                                                       end;
                                               end;
                                           If ((vgravadet) and (tbl_det_ratExce");
            WriteLiteral(@"_2.AsString='ESPC')) then
                                               begin
                                                    If tbl_unidEspec_unid.asString=tbl_det_ratValor_exce_2.asString then
                                                       begin
                                                            vgravadet:=false;
                                                       end;
                                               end;
                                           If ((vgravadet) and (tbl_det_ratExce_3.AsString='ESPC')) then
                                               begin
                                                    If tbl_unidEspec_unid.asString=tbl_det_ratValor_exce_3.asString then
                                                       begin
                                                            vgravadet:=false;
                                                       end;
                                               end;

{                          ");
            WriteLiteral(@"                       Else If (tbl_det_ratExce_1.AsString='FR2') and (FloatToStr(tbl_unidFra2_unid.asFloat)<>(tbl_det_ratValor_exce_1.asString)) then
                                                     begin
                                                         vgravadet:=true;
                                                     end
                                                 Else If (tbl_det_ratExce_1.AsString='FR3') and (FloatToStr(tbl_unidFra3_unid.asFloat)<>(tbl_det_ratValor_exce_1.asString)) then
                                                     begin
                                                         vgravadet:=true;
                                                     end
                                                 Else If (tbl_det_ratExce_1.AsString='ESPC') and (tbl_unidEspec_unid.asString<>tbl_det_ratValor_exce_1.asString) then
                                                     begin
                                                         vgravadet:=true;
      ");
            WriteLiteral(@"                                               end
                                                 Else If (tbl_det_ratExce_2.AsString='FR1') and (FloatToStr(tbl_unidFra1_unid.asFloat)<>(tbl_det_ratValor_exce_2.asString)) then
                                                     begin
                                                         vgravadet:=true;
                                                     end
                                                 Else If (tbl_det_ratExce_2.AsString='FR2') and (FloatToStr(tbl_unidFra2_unid.asFloat)<>(tbl_det_ratValor_exce_2.asString)) then
                                                     begin
                                                         vgravadet:=true;
                                                     end
                                                 Else If (tbl_det_ratExce_2.AsString='FR3') and (FloatToStr(tbl_unidFra3_unid.asFloat)<>(tbl_det_ratValor_exce_2.asString)) then
                                                    ");
            WriteLiteral(@" begin
                                                         vgravadet:=true;
                                                     end
                                                 Else If (tbl_det_ratExce_2.AsString='ESPC') and (tbl_unidEspec_unid.asString<>tbl_det_ratValor_exce_2.asString)then
                                                     begin
                                                         vgravadet:=true;
                                                     end
                                                 Else If (tbl_det_ratExce_3.AsString='FR1') and (FloatToStr(tbl_unidFra1_unid.asFloat)<>(tbl_det_ratValor_exce_3.asString))then
                                                     begin
                                                         vgravadet:=true;
                                                     end
                                                 Else If (tbl_det_ratExce_3.AsString='FR2') and (FloatToStr(tbl_unidFra2_unid.asFloat)<>(tbl_det_ratValor_");
            WriteLiteral(@"exce_3.asString))then
                                                     begin
                                                         vgravadet:=true;
                                                     end
                                                 Else If (tbl_det_ratExce_3.AsString='FR3') and (FloatToStr(tbl_unidFra3_unid.asFloat)<>(tbl_det_ratValor_exce_3.asString)) then
                                                     begin
                                                         vgravadet:=true;
                                                     end
                                                 Else If (tbl_det_ratExce_3.AsString='ESPC') and (tbl_unidEspec_unid.asString<>tbl_det_ratValor_exce_3.asString) then
                                                     begin
                                                         vgravadet:=true;
                                                     end; }
                                      end;
                              ");
            WriteLiteral(@"    If vgravadet then
                                     begin
                                        if tbl_det_ratOp_rateio.AsInteger=1 then
                                           begin
                                                vvl_item:=tbl_det_ratVl_item_rat.AsFloat*((tbl_unidFra1_unid.AsFloat)/100);
                                                strvalor:=FloatToStr(vvl_item);
                                                vvl_item:=strToFloat(strvalor);
                                                vvl_item:=int(vvl_item*100);
                                                vvl_item:=vvl_item/100;
                                                if tbl_det_ratOp_arred.AsInteger=2 then
                                                   vvl_item:=int(vvl_item)
                                                else if tbl_det_ratOp_arred.AsInteger=3 then
                                                        begin
                                                             if f");
            WriteLiteral(@"rac(vvl_item)<>0 then
                                                                vvl_item:=int(vvl_item)+1
                                                             else
                                                                vvl_item:=int(vvl_item);
                                                        end
                                                else if tbl_det_ratOp_arred.AsInteger=4 then
                                                    begin
                                                        if frac(vvl_item)>=0.50 then
                                                           vvl_item:=int(vvl_item)+1
                                                        else
                                                           vvl_item:=int(vvl_item);
                                                    end
                                                else if tbl_det_ratOp_arred.AsInteger=5 then
                                                    begin
          ");
            WriteLiteral(@"                                              if frac(vvl_item)<0.50 then
                                                                               vvl_item:=int(vvl_item)+0.50
                                                                               else
                                                                               vvl_item:=int(vvl_item)+1;
                                                                               end;
                                                                               vvl_titulo:=vvl_titulo+vvl_item;
                                                                               vvl_multa:=vvl_multa+(vvl_item*(tbl_det_ratPerc_multa.asFloat/100));
                                                                               end
                                                                               else if tbl_det_ratOp_rateio.AsInteger=2 then
                                                                               begin
     ");
            WriteLiteral(@"                                                                          vvl_item:=tbl_det_ratVl_item_rat.AsFloat*((tbl_unidFra2_unid.AsFloat)/100);
                                                                               strvalor:=FloatToStr(vvl_item);
                                                                               vvl_item:=strToFloat(strvalor);
                                                                               vvl_item:=int(vvl_item*100);
                                                                               vvl_item:=vvl_item/100;
                                                                               if tbl_det_ratOp_arred.AsInteger=2 then
                                                                               vvl_item:=int(vvl_item)
                                                                               else if tbl_det_ratOp_arred.AsInteger=3 then
                                                                               begin
 ");
            WriteLiteral(@"                                                                              if frac(vvl_item)<>0 then
                                                                vvl_item:=int(vvl_item)+1
                                                             else
                                                                vvl_item:=int(vvl_item);
                                                        end
                                                else if tbl_det_ratOp_arred.AsInteger=4 then
                                                    begin
                                                        if frac(vvl_item)>=0.50 then
                                                           vvl_item:=int(vvl_item)+1
                                                        else
                                                           vvl_item:=int(vvl_item);
                                                    end
                                                else if tbl_det_ratOp_arred.AsInt");
            WriteLiteral(@"eger=5 then
                                                    begin
                                                        if frac(vvl_item)<0.50 then
                                                           vvl_item:=int(vvl_item)+0.50
                                                        else
                                                           vvl_item:=int(vvl_item)+1;
                                                    end;
                                                vvl_titulo:=vvl_titulo+vvl_item;
                                                vvl_multa:=vvl_multa+(vvl_item*(tbl_det_ratPerc_multa.asFloat/100));
                                           end
                                        else if tbl_det_ratOp_rateio.AsInteger=3 then
                                           begin
                                                vvl_item:=tbl_det_ratVl_item_rat.AsFloat*((tbl_unidFra3_unid.AsFloat)/100);
                                                strvalor:=Flo");
            WriteLiteral(@"atToStr(vvl_item);
                                                vvl_item:=strToFloat(strvalor);
                                                vvl_item:=int(vvl_item*100);
                                                vvl_item:=vvl_item/100;
                                                if tbl_det_ratOp_arred.AsInteger=2 then
                                                   vvl_item:=int(vvl_item)
                                                else if tbl_det_ratOp_arred.AsInteger=3 then
                                                        begin
                                                             if frac(vvl_item)<>0 then
                                                                vvl_item:=int(vvl_item)+1
                                                             else
                                                                vvl_item:=int(vvl_item);
                                                        end
                                                else ");
            WriteLiteral(@"if tbl_det_ratOp_arred.AsInteger=4 then
                                                    begin
                                                        if frac(vvl_item)>=0.50 then
                                                           vvl_item:=int(vvl_item)+1
                                                        else
                                                           vvl_item:=int(vvl_item);
                                                    end
                                                else if tbl_det_ratOp_arred.AsInteger=5 then
                                                    begin
                                                        if frac(vvl_item)<0.50 then
                                                           vvl_item:=int(vvl_item)+0.50
                                                        else
                                                           vvl_item:=int(vvl_item)+1;
                                                    end;
              ");
            WriteLiteral(@"                                  vvl_titulo:=vvl_titulo+vvl_item;
                                                vvl_multa:=vvl_multa+(vvl_item*(tbl_det_ratPerc_multa.asFloat/100));
                                           end
                                        else if tbl_det_ratOp_rateio.AsInteger=4 then
                                           begin
                                               vvl_item:=tbl_det_ratVl_item_rat.AsFloat*((tbl_unidFra1_unid.AsFloat+tbl_unidFra2_unid.AsFloat)/100);
                                               strvalor:=FloatToStr(vvl_item);
                                               vvl_item:=strToFloat(strvalor);
                                               vvl_item:=int(vvl_item*100);
                                               vvl_item:=vvl_item/100;
                                               if tbl_det_ratOp_arred.AsInteger=2 then
                                                  vvl_item:=int(vvl_item)
                               ");
            WriteLiteral(@"                else if tbl_det_ratOp_arred.AsInteger=3 then
                                                        begin
                                                             if frac(vvl_item)<>0 then
                                                                vvl_item:=int(vvl_item)+1
                                                             else
                                                                vvl_item:=int(vvl_item);
                                                        end
                                                else if tbl_det_ratOp_arred.AsInteger=4 then
                                                    begin
                                                        if frac(vvl_item)>=0.50 then
                                                           vvl_item:=int(vvl_item)+1
                                                        else
                                                           vvl_item:=int(vvl_item);
                              ");
            WriteLiteral(@"                      end
                                                else if tbl_det_ratOp_arred.AsInteger=5 then
                                                    begin
                                                        if frac(vvl_item)<0.50 then
                                                           vvl_item:=int(vvl_item)+0.50
                                                        else
                                                           vvl_item:=int(vvl_item)+1;
                                                    end;
                                               vvl_titulo:=vvl_titulo+vvl_item;
                                               vvl_multa:=vvl_multa+(vvl_item*(tbl_det_ratPerc_multa.asFloat/100));
                                           end
                                        else if tbl_det_ratOp_rateio.AsInteger=5 then
                                           begin
                                               vvl_item:=tbl_det_ratVl_item_rat.");
            WriteLiteral(@"AsFloat*((tbl_unidFra1_unid.AsFloat+tbl_unidFra3_unid.AsFloat)/100);
                                               strvalor:=FloatToStr(vvl_item);
                                               vvl_item:=strToFloat(strvalor);
                                               vvl_item:=int(vvl_item*100);
                                               vvl_item:=vvl_item/100;
                                               if tbl_det_ratOp_arred.AsInteger=2 then
                                                  vvl_item:=int(vvl_item)
                                               else if tbl_det_ratOp_arred.AsInteger=3 then
                                                        begin
                                                             if frac(vvl_item)<>0 then
                                                                vvl_item:=int(vvl_item)+1
                                                             else
                                                                vvl_item:=int(vv");
            WriteLiteral(@"l_item);
                                                        end
                                                else if tbl_det_ratOp_arred.AsInteger=4 then
                                                    begin
                                                        if frac(vvl_item)>=0.50 then
                                                           vvl_item:=int(vvl_item)+1
                                                        else
                                                           vvl_item:=int(vvl_item);
                                                    end
                                                else if tbl_det_ratOp_arred.AsInteger=5 then
                                                    begin
                                                        if frac(vvl_item)<0.50 then
                                                           vvl_item:=int(vvl_item)+0.50
                                                        else
                                   ");
            WriteLiteral(@"                        vvl_item:=int(vvl_item)+1;
                                                    end;
                                               vvl_titulo:=vvl_titulo+vvl_item;
                                               vvl_multa:=vvl_multa+(vvl_item*(tbl_det_ratPerc_multa.asFloat/100));
                                           end
                                        else if tbl_det_ratOp_rateio.AsInteger=6 then
                                           begin
                                               vvl_item:=tbl_det_ratVl_item_rat.AsFloat*((tbl_unidFra2_unid.AsFloat+tbl_unidFra3_unid.AsFloat)/100);
                                               strvalor:=FloatToStr(vvl_item);
                                               vvl_item:=strToFloat(strvalor);
                                               vvl_item:=int(vvl_item*100);
                                               vvl_item:=vvl_item/100;
                                               if tbl_det_ratOp_arred.As");
            WriteLiteral(@"Integer=2 then
                                                  vvl_item:=int(vvl_item)
                                               else if tbl_det_ratOp_arred.AsInteger=3 then
                                                        begin
                                                             if frac(vvl_item)<>0 then
                                                                vvl_item:=int(vvl_item)+1
                                                             else
                                                                vvl_item:=int(vvl_item);
                                                        end
                                                else if tbl_det_ratOp_arred.AsInteger=4 then
                                                    begin
                                                        if frac(vvl_item)>=0.50 then
                                                           vvl_item:=int(vvl_item)+1
                                                       ");
            WriteLiteral(@" else
                                                           vvl_item:=int(vvl_item);
                                                    end
                                                else if tbl_det_ratOp_arred.AsInteger=5 then
                                                    begin
                                                        if frac(vvl_item)<0.50 then
                                                           vvl_item:=int(vvl_item)+0.50
                                                        else
                                                           vvl_item:=int(vvl_item)+1;
                                                    end;
                                               vvl_titulo:=vvl_titulo+vvl_item;
                                               vvl_multa:=vvl_multa+(vvl_item*(tbl_det_ratPerc_multa.asFloat/100));
                                           end
                                        else if tbl_det_ratOp_rateio.AsInteger=7 then
        ");
            WriteLiteral(@"                                   begin
                                               vvl_item:=tbl_det_ratVl_item_rat.AsFloat*((tbl_unidFra1_unid.AsFloat+tbl_unidFra2_unid.AsFloat+tbl_unidFra3_unid.AsFloat)/100);
                                               strvalor:=FloatToStr(vvl_item);
                                               vvl_item:=strToFloat(strvalor);
                                               vvl_item:=int(vvl_item*100);
                                               vvl_item:=vvl_item/100;
                                               if tbl_det_ratOp_arred.AsInteger=2 then
                                                  vvl_item:=int(vvl_item)
                                               else if tbl_det_ratOp_arred.AsInteger=3 then
                                                        begin
                                                             if frac(vvl_item)<>0 then
                                                                vvl_item:=int(vvl_item)+1");
            WriteLiteral(@"
                                                             else
                                                                vvl_item:=int(vvl_item);
                                                        end
                                               else if tbl_det_ratOp_arred.AsInteger=4 then
                                                    begin
                                                        if frac(vvl_item)>=0.50 then
                                                           vvl_item:=int(vvl_item)+1
                                                        else
                                                           vvl_item:=int(vvl_item);
                                                    end
                                                else if tbl_det_ratOp_arred.AsInteger=5 then
                                                    begin
                                                        if frac(vvl_item)<0.50 then
                                       ");
            WriteLiteral(@"                    vvl_item:=int(vvl_item)+0.50
                                                        else
                                                           vvl_item:=int(vvl_item)+1;
                                                    end;
                                               vvl_titulo:=vvl_titulo+vvl_item;
                                               vvl_multa:=vvl_multa+(vvl_item*(tbl_det_ratPerc_multa.asFloat/100));
                                           end
                                        else if tbl_det_ratOp_rateio.AsInteger=8 then
                                           begin
                                               vvl_item:=tbl_det_ratVl_item_rat.AsFloat/(tbl_condN_unid.AsInteger);
                                               strvalor:=FloatToStr(vvl_item);
                                               vvl_item:=strToFloat(strvalor);
                                               vvl_item:=int(vvl_item*100);
                              ");
            WriteLiteral(@"                 vvl_item:=vvl_item/100;
                                               if tbl_det_ratOp_arred.AsInteger=2 then
                                                  vvl_item:=int(vvl_item)
                                               else if tbl_det_ratOp_arred.AsInteger=3 then
                                                        begin
                                                             if frac(vvl_item)<>0 then
                                                                vvl_item:=int(vvl_item)+1
                                                             else
                                                                vvl_item:=int(vvl_item);
                                                        end
                                               else if tbl_det_ratOp_arred.AsInteger=4 then
                                                    begin
                                                        if frac(vvl_item)>=0.50 then
                            ");
            WriteLiteral(@"                               vvl_item:=int(vvl_item)+1
                                                        else
                                                           vvl_item:=int(vvl_item);
                                                    end
                                                else if tbl_det_ratOp_arred.AsInteger=5 then
                                                    begin
                                                        if frac(vvl_item)<0.50 then
                                                           vvl_item:=int(vvl_item)+0.50
                                                        else
                                                           vvl_item:=int(vvl_item)+1;
                                                    end;
                                               vvl_titulo:=vvl_titulo+vvl_item;
                                               vvl_multa:=vvl_multa+(vvl_item*(tbl_det_ratPerc_multa.asFloat/100));
                              ");
            WriteLiteral(@"             end;
                                        if (vvl_item<>0) then
                                            begin
                                                 tbl_det_bole.insert;
                                                 vnum_seq:=vnum_seq+1;
                                                 tbl_det_boleNum_emissao.AsInteger:=tbl_rat_prinNum_emissao.AsInteger;
                                                 tbl_det_boleCod_cond.AsString:=tbl_rat_prinCod_cond.AsString;
                                                 tbl_det_boleBloco.AsString:=vbloco;
                                                 tbl_det_boleUnid.AsInteger:=vunid;
                                                 tbl_det_boleSeq_item.AsInteger:=vnum_seq;
                                                 tbl_det_boleCod_cta_grupo.asInteger:=tbl_det_ratCod_cta_grupo.asInteger;
                                                 tbl_det_boleCod_subcta_grupo.AsInteger:=tbl_det_ratCod_subcta_grupo.asInteger;
 ");
            WriteLiteral(@"                                                tbl_det_boleHist_item.AsString:=tbl_det_ratRef_item_rat.AsString;
                                                 tbl_det_boleVl_item.AsFloat:=vvl_item;
                                                 if tbl_det_ratCod_cta_grupo.asInteger=8 then
                                                    vacordo:='S';
                                                 tbl_det_bole.post;
                                            end;
                                     end;
                                  vvl_item:=0;
                                  tbl_det_rat.next;
                             end;
                       if tbl_verb.FindKey([tbl_rat_prinCod_cond.AsString,tbl_rat_prinNum_emissao.AsInteger,tbl_unidId_unid.AsString]) then
                          begin
                              while (tbl_verbCod_cond.AsString=tbl_rat_prinCod_cond.AsString) and
                                    (tbl_verbNum_emissao.AsInteger=tbl_rat_prinNum_emis");
            WriteLiteral(@"sao.AsInteger) and
                                    (tbl_verbUnid_verb.AsString=tbl_unidId_unid.AsString) and
                                    (not tbl_verb.eof) do
                                     begin
                                        tbl_det_bole.insert;
                                        tbl_det_boleNum_emissao.AsInteger:=tbl_rat_prinNum_emissao.AsInteger;
                                        tbl_det_boleCod_cond.AsString:=tbl_rat_prinCod_cond.AsString;
                                        tbl_det_boleBloco.AsString:=vbloco;
                                        tbl_det_boleUnid.AsInteger:=vunid;
                                        vnum_seq:=vnum_seq+1;
                                        tbl_det_boleSeq_item.AsInteger:=vnum_seq;
                                        tbl_det_boleCod_cta_grupo.asInteger:=tbl_verbCod_cta_grupo.asInteger;
                                        tbl_det_boleCod_subcta_grupo.AsInteger:=tbl_verbCod_subcta_grupo.asInteger;
   ");
            WriteLiteral(@"                                     tbl_det_boleHist_item.AsString:=tbl_verbRef_item_verb.AsString;
                                        tbl_det_boleVl_item.AsFloat:=tbl_verbVl_item_verb.AsFloat;
                                        tbl_det_bole.post;
                                        if tbl_verbCod_cta_grupo.asInteger=8 then
                                             vacordo:='S';
                                        vvl_titulo:=vvl_titulo+tbl_verbVl_item_verb.AsCurrency;
                                        if tbl_verbVl_item_verb.AsFloat<>0 then
                                           begin
                                               vvl_multa:=vvl_multa+(tbl_verbVl_item_verb.AsFloat*(tbl_verbPerc_multa.asFloat/100));
                                               if ((tbl_verbCod_cta_grupo.asInteger=1) and
                                                   (tbl_verbCod_subcta_grupo.asInteger=30)) then
                                                   begin
         ");
            WriteLiteral(@"                                              ult_lanc:=tbl_num_lancUlt_num_lanc.asinteger;
                                                       ult_lanc:=ult_lanc+1;
                                                       tbl_num_lanc.edit;
                                                       tbl_num_lancUlt_num_lanc.asinteger:=ult_lanc;
                                                       tbl_num_lanc.post;
                                                       tbl_pagar.last;
                                                       tbl_pagar.insert;
                                                       tbl_pagarNum_lanc.AsInteger:=ult_lanc;
                                                       tbl_pagarMnem_cond.AsString:=tbl_condMnem_cond.AsString;
                                                       tbl_pagarData_lanc.AsDateTime:=tbl_rat_prinDt_vencto.asDateTime;
                                                       tbl_pagarCod_cta_grupo.AsInteger:=1;
                                 ");
            WriteLiteral(@"                      tbl_pagarCod_subcta_grupo.AsInteger:=12;
                                                       tbl_pagarCod_item_conta.AsInteger:=10;
                                                       tbl_pagarCompl_lanc.AsString:=tbl_det_boleHist_item.asString;
                                                       tbl_pagarValor_lanc.AsFloat:=(tbl_det_boleVl_Item.AsFloat)*(-1);
                                                       tbl_pagarNum_cheque.asInteger:=999999;
                                                       tbl_pagar.post;
                                                       tbl_det_bole.edit;
                                                       tbl_det_boleNum_lanc_cp.AsInteger:=ult_lanc;
                                                       tbl_det_bole.post;
                                                   end;
                                           end;
                                        tbl_verb.next;
                                     end;
   ");
            WriteLiteral(@"                       end;
                       tbl_boletos.edit;
                       tbl_boletosVl_titulo.AsFloat:=vvl_titulo;
                       strvalor:=FloatToStr(vvl_multa);
                       vvl_multa:=strToFloat(strvalor);
                       vvl_multa:=int(vvl_multa*100);
                       vvl_multa:=vvl_multa/100;
                       tbl_boletosVl_multa.AsFloat:=vvl_multa;
                       tbl_boletosAcordo.asString:=vacordo;
                       tbl_boletos.post;
                       if vvl_titulo=0 then
                          begin
                               tbl_det_bole.edit;
//                               tbl_det_bole.KeyFieldCount:=4;  // 4 campos da chave primaria
                               if tbl_det_bole.FindKey([tbl_rat_prinNum_emissao.AsInteger,tbl_rat_prinCod_cond.AsString,vbloco,vunid]) then
                                  begin
                                      tbl_boletos.Edit;
                                     ");
            WriteLiteral(@" tbl_BoletosDt_pgto.AsDateTime:=tbl_BoletosDT_vencto.AsDateTime;
                                      tbl_BoletosTipo_pgt.AsString:='2';
                                      tbl_boletos.post;
                                  end
                               else
                                  begin
                                       tbl_boletos.edit;
                                       tbl_boletos.Delete;
                                  end;
                          end;
                  end;
             i:=i+1;
             ProgressBar1.Position:=i;
             veste_tit:=veste_tit+1;
             Lbl_imp.Caption:=intToStr(veste_tit)+'/'+inttostr(vtot_tit);
             lbl_imp.Refresh;
             tbl_unid.Next;
          end;
{          if tbl_Boletos.FindKey([tbl_rat_prinNum_emissao.asInteger,tbl_rat_prinCod_cond.asString,tbl_CondBloco_sind.asString,tbl_condUnid_sind.asInteger]) then
          if tbl_BoletosVl_titulo.AsFloat=0 then
             begin
            ");
            WriteLiteral(@"      tbl_Boletos.edit;
                  tbl_BoletosDt_pgto.AsDateTime:=tbl_BoletosDT_vencto.AsDateTime;
                  tbl_BoletosTipo_pgt.AsString:='2';
                  tbl_Boletos.Post;
             end; }
      showmessage('Fim de Rateio...');
      ProgressBar1.Min:=0;
      Mskedt_proc_unid.Text:='';
end;

procedure TFrm_cad_rateios.tbl_boletosAfterPost(DataSet: TDataSet);
begin
     DBISaveChanges(tbl_boletos.handle); {Grava buffers ao mudar de registro}
end;

procedure TFrm_cad_rateios.tbl_unidAfterPost(DataSet: TDataSet);
begin
     DBISaveChanges(tbl_unid.handle); {Grava buffers ao mudar de registro}
end;

procedure TFrm_cad_rateios.rdbt_arred_nenhumClick(Sender: TObject);
begin
    tbl_det_rat.edit;
    tbl_det_ratOp_arred.AsInteger:=1;
    tbl_det_ratNome_Op_arred.AsString:=rdbt_arred_nenhum.Caption;
end;

procedure TFrm_cad_rateios.rdbt_arred_despr_centClick(Sender: TObject);
begin
    tbl_det_rat.edit;
    tbl_det_ratOp_arred.AsInteger:=2;
    tbl_det_ratNome");
            WriteLiteral(@"_Op_arred.AsString:=rdbt_arred_despr_cent.Caption;
end;

procedure TFrm_cad_rateios.rdbt_arred_maisClick(Sender: TObject);
begin
    tbl_det_rat.edit;
    tbl_det_ratOp_arred.AsInteger:=3;
    tbl_det_ratNome_Op_arred.AsString:=rdbt_arred_mais.Caption;
end;

procedure TFrm_cad_rateios.rdbt_arred_para_umClick(Sender: TObject);
begin
    tbl_det_rat.edit;
    tbl_det_ratOp_arred.AsInteger:=4;
    tbl_det_ratNome_Op_arred.AsString:=rdbt_arred_para_um.Caption;
end;

procedure TFrm_cad_rateios.Rdbt_arred_50_centClick(Sender: TObject);
begin
    tbl_det_rat.edit;
    tbl_det_ratOp_arred.AsInteger:=5;
    tbl_det_ratNome_Op_arred.AsString:=rdbt_arred_50_cent.Caption;
end;

procedure TFrm_cad_rateios.tbl_rat_prinAfterScroll(DataSet: TDataSet);
begin
     if tbl_rat_prinRateado.asString='S' then
        sbtn_ok_rateio.visible:=false
     else
        sbtn_ok_rateio.visible:=true;
end;


procedure TFrm_cad_rateios.sbtn_moverConta1Click(Sender: TObject);
begin
     num_botao:=1;
     ");
            WriteLiteral(@"Frm_sel_contas_inquilinos.dbg_mor.Visible:=false;
     Frm_sel_contas_inquilinos.sbtn_sel_inquilino.visible:=false;
     Frm_sel_contas_inquilinos.Showmodal;
end;

procedure TFrm_cad_rateios.Cbx_condClick(Sender: TObject);
//var
//   i : integer;
begin
     tbl_cond.edit;
     if tbl_cond.FindKey([Cbx_cond.Items.Strings[Cbx_cond.itemindex]]) THEN
        begin
             tbl_rat_prin.Last;
        end;

//  for i := 0 to (ComboBox1.Items.Count - 1) do
//      begin
//          if ComboBox1.items[i].checked then
//             begin
//                  tbl_cond.edit;
// /                 tbl_cond.FindKey([ComboBox1.Items.Strings[i]]);
//                  break;
//             end;
//          continue;
//      end;
end;

procedure TFrm_cad_rateios.sbtn_mover_conta_unid_vincClick(
  Sender: TObject);
begin
     mskedt_cod_cta_unid_vinc.text:=formatfloat('0',tbl_grupoCod_cta_grupo.asInteger);
     mskedt_cod_subcta_unid_vinc.text:=formatfloat('00',tbl_sub_grupoCod_subcta_grupo.as");
            WriteLiteral(@"Integer);
     mskedt_nome_conta_unid_vinc.Text:=tbl_grupoNome_conta_grupo.asString+'/'+tbl_sub_grupoNome_subcta_grupo.asString;
end;

procedure TFrm_cad_rateios.sbtn_incl_unid_vincClick(Sender: TObject);
begin
//     sbtn_incl_unid_vinc.Caption:='OK...Incluir';
     grbx_unid_vinc.visible:=true;
end;

procedure TFrm_cad_rateios.sbtn_ok_incluir_unid_vincClick(Sender: TObject);
var
   vseq, i : integer;
   vunid_vinc : string;
   vvlaux : Currency;
   vqtd_incl : integer;
   vvltot_incl : Currency;
begin
    sbtn_incl_unid_vinc.Caption:='Aguarde...';
    vqtd_incl:=0;
    vvltot_incl:=0;
    tbl_verb.last;
//    vseq:=tbl_verbSeq_item_verb.asInteger;
    tbl_verb.First;
    tbl_unid.first;
    while not tbl_unid.eof do
        begin
           mskedt_andamento.text:=tbl_unidId_unid.asString;
           mskedt_andamento.refresh;
           vseq:=0;
           for i:=1 to 3 do
               begin
                   vunid_vinc:='';
                   if ((i=1) and
              ");
            WriteLiteral(@"         (tbl_unidUnd1_vinc.asString<>'')) then
                        vunid_vinc:=tbl_unidUnd1_vinc.asString
                   else if ((i=2) and
                       (tbl_unidUnd2_vinc.asString<>'')) then
                        vunid_vinc:=tbl_unidUnd2_vinc.asString
                   else if ((i=3) and
                       (tbl_unidUnd3_vinc.asString<>'')) then
                        vunid_vinc:=tbl_unidUnd3_vinc.asString;

                   if vunid_vinc<>'' then
                      begin
                           tbl_verb.insert;
                           vqtd_incl:=vqtd_incl+1;
                           tbl_verbNum_emissao.AsInteger:=tbl_rat_prinNum_emissao.AsInteger;
                           tbl_verbCod_cond.AsString:=tbl_rat_prinCod_cond.AsString;
                           tbl_verbUnid_verb.asString:=tbl_unidId_unid.AsString;
                           vseq:=vseq+1;
                           tbl_verbSeq_item_verb.asInteger:=vseq;
                           tbl_verbC");
            WriteLiteral(@"od_cta_grupo.AsInteger:=strToint(mskedt_cod_cta_unid_vinc.text);
                           tbl_verbCod_subcta_grupo.AsInteger:=strToint(mskedt_cod_subcta_unid_vinc.text);
                           tbl_verbRef_item_verb.AsString:=mskedt_hist_unid_vinc.text+'-'+vunid_vinc;
                           if chkbx_mult_fr3.checked then
                              begin
                                   vvlaux:=strTofloat(mskedt_vl_unid_vinc.Text)*(tbl_unidFra3_unid.asFloat);
                                   vvlaux:=int(vvlaux*100);
                                   vvlaux:=vvlaux/100;
                                   tbl_verbVl_item_verb.AsFloat:=vvlaux;
                              end
                           else
                              begin
                                   vvlaux:=strTofloat(mskedt_vl_unid_vinc.Text);
                                   vvlaux:=int(vvlaux*100);
                                   vvlaux:=vvlaux/100;
                                   tbl_verbVl_");
            WriteLiteral(@"item_verb.AsFloat:=vvlaux;
                              end;
                           vvltot_incl:=vvltot_incl+vvlaux;
                           tbl_verbperc_multa.asFloat:=strTofloat(mskedt_perc_multa_unid_vinc.Text);
                           tbl_verb.post;
                      end;
               end;
           tbl_unid.next;
        end;
    sbtn_incl_unid_vinc.Caption:='OK...Incluir';
    showmessage('Fim de Inclusão >> Incluidos : '+formatfloat('#####',vqtd_incl)+' no Valor : '+formatfloat('###,###,##0.00', vvltot_incl));
    grbx_unid_vinc.visible:=false;
end;

procedure TFrm_cad_rateios.mskedt_vl_unid_vincExit(Sender: TObject);
begin
     if mskedt_vl_unid_vinc.Text='' then
        mskedt_vl_unid_vinc.Text:='0';
     mskedt_vl_unid_vinc.Text:=formatfloat('###,###,##0.00',strTofloat(mskedt_vl_unid_vinc.text));
end;

procedure TFrm_cad_rateios.mskedt_perc_multa_unid_vincExit(
  Sender: TObject);
begin
     if mskedt_perc_multa_unid_vinc.Text='' then
        mskedt_perc_mu");
            WriteLiteral(@"lta_unid_vinc.Text:='0';
     mskedt_perc_multa_unid_vinc.Text:=formatfloat('##0.00',strTofloat(mskedt_perc_multa_unid_vinc.text));
end;

procedure TFrm_cad_rateios.btn_del_verbClick(Sender: TObject);
begin
     if tbl_verb.recordCount<>0 then
        begin
             if MessageDlg('Excluir item de verba selecionado ?', mtConfirmation, [mbYes, mbNo], 0) =
                    mrYes then
                 begin
                      tbl_verb.edit;
                      tbl_verb.delete;
                 end;
        end;
end;

procedure TFrm_cad_rateios.tbl_num_lancAfterPost(DataSet: TDataSet);
begin
     DBISaveChanges(tbl_num_lanc.handle); {Grava buffers ao mudar de registro}
end;

end.


    </textarea>
</div>

<div>
    <textarea readonly class=""tituloAreaCodigo"">
       Funções Delphi extraído de projeto desenvolvido há mais de 25 anos, sustentado até 08/2021.
    </textarea>

    <textarea readonly class=""areaCodigo"">
unit Own_procs;


interface
      Function Extenso");
            WriteLiteral(@"(mNum : Currency) : String;
      Function Dif_datas(mData1, mData2 : TDateTime) : Integer;
      Function Calc_codbar(vnumbco,vagbco,vccbco,vnosson, vfatorvenc : Integer; vvltitulo : Currency; vcart, vdvagbco, vmoeda, vdv_cc, vdv_nosson : String; vdt_emissao : TDateTime) : String;
      function CalculaDV11B9(numero_base : string): string;
      function CalculaDV11B7(numero_base : string): string;
      function VerificaDV11(entrada : string): boolean;
      function Modulo10(S: String): String;
      function DifDateUtil(dataini,datafin:string):integer;

implementation
uses
    SysUtils;

Function Extenso(mNum : Currency) : String;

   function NrBaixos(mNumB : Integer) : string;
   const mStrNumB : array[0..18] of pChar =
      ('um', 'dois', 'três', 'quatro', 'cinco', 'seis',
       'sete', 'oito', 'nove', 'dez', 'onze', 'doze',
       'treze', 'quatorze', 'quinze', 'dezesseis', 'dezessete',
       'dezoito', 'dezenove');
   begin
       result:=mStrNumb[mNumB -1]+ ' ';
   end;

");
            WriteLiteral("   function NrMedios(nNumM : integer) : string;\r\n   var mStrNumM, mStrDig : string;\r\n   begin\r\n      if nNumM < 20 then\r\n         result:=NrBaixos(nNumM)\r\n      else\r\n         begin");
            BeginWriteAttribute("result:", "\r\n              result:=\'", 71002, "\'", 71027, 0);
            EndWriteAttribute();
            WriteLiteral(@";
              mStrDig:='00'+IntToStr(nNumM);
              mStrDig:=copy(mStrDig, length(mStrDig)-1,2);
              mStrNumM:='vinte    trinta   quarenta '+
                        'cinquentasessenta setenta  '+
                        'oitenta  noventa  ';
              result:=TrimRight(copy(mStrNumM,
                     ((StrToInt(mStrDig[1])-2)*9)+1,9))+'';
              if StrToInt(mStrDig[2]) > 0 then
                 result:=result+' e '+
                    NrBaixos(StrToInt(mStrDig[2]));
         end;
   end;

   function NrAltos(mNumA : integer): string;
   var mStrNumA, mStrDig : string;
   begin
        if mNumA = 100 then
           Result:='cem '
        else
           begin
                result:='';
                mStrDig:='00'+IntToStr(mNumA);
                mStrDig:=copy(mStrDig, length(mStrDig)-2,3);
              mStrNumA:='cento       duzentos    '+
                        'trezentos   quatrocentos'+
                        'quinhentos  seiscentos  '+
 ");
            WriteLiteral(@"                       'setecentos  oitocentos  '+
                        'novecentos  ';
              if StrToInt(mStrDig[1]) > 0 then
                 result:=TrimRight(copy(mStrNumA,
                     ((StrToInt(mStrDig[1])-1)*12)+1,12))+'';
              if StrToInt(Copy(mStrDig,2,2)) > 0 then
                 begin
                     if Length(result) > 0 then
                        result:=result+' e ';
                     result:=result+NrMedios(StrToInt(Copy(mStrDig,2,2)));
                 end;
           end;
   end;
var
  mStrNomes,strPart,mNumString : string;
  i, numPart, mPos : integer;
  partDec : Real;
begin
  mNumString:=FormatFloat('00000000000000',mNum*100);
  mStrNomes:='bilhão  bilhões milhão  milhões '+
             'mil     mil     ';
  for i:=1 to 4 do
      begin
          strPart:=Copy(mNumString,((i-1)*3)+1,3);
          numPart:=StrToInt(strPart);
          if numPart = 1 then
             mPos:=1
          else
             mPos:=8;
          ");
            WriteLiteral(@"if numPart > 0 then
             begin
                 if length(result)>0 then
                    result:=result+', ';
                 result:=result+NrAltos(numPart);
                 result:=result+TrimRight(Copy
                 (mStrNomes,((i-1)*16)+mPos,8));
                 if not i = 4 then
                    result:=result+' ';
             end;
      end;
      if length(Result)>0 then
         begin
             if int(mNum)= 1 then
                result:=result+' real '
             else
                result:=result+' reais ';
         end;
      if frac(mNum)>0 then
         begin
             if length(result)>0 then
                result:=result+' e ';
             partDec:=(mNum - int(mNum))*100;
             numPart:=trunc(partDec);
             if partDec = 1 then
                result:=result+' um centavo'
             else
                result:=result+NrMedios(numPart)+' centavos';
         end;
end;
Function Dif_datas(mData1, mData2 : TDateTime) : ");
            WriteLiteral(@"Integer;
var
   vdifdatas : String;
begin
     vdifdatas:=FloatToStr(mData2 - mData1);
     result:=StrToInt(vdifdatas);
end;


Function Calc_codbar(vnumbco,vagbco,vccbco,vnosson,vfatorvenc : Integer; vvltitulo : Currency; vcart, vdvagbco, vmoeda, vdv_cc, vdv_nosson : String; vdt_emissao : TDateTime) : String;
begin
     if vnumbco=341 then
        begin
             {Monta 43 digitos do codigo de barra}
             result:=formatfloat('000',vnumbco)+vmoeda+formatfloat('0000',vfatorvenc)+FormatFloat('0000000000',vvltitulo)+
                     formatfloat('000',strtoint(vcart))+formatfloat('000',vnosson)+vdv_nosson+
                     formatfloat('0000',vagbco)+formatfloat('00000',vccbco)+vdv_cc+'000';
        end
     else if vnumbco=356 then
        begin
             result:=formatfloat('000',vnumbco)+vmoeda+formatfloat('0000',vfatorvenc)+FormatFloat('0000000000',vvltitulo)+
                     formatfloat('0000',vagbco)+formatfloat('0000000',vccbco)+vdv_cc+formatfloat('0000',strT");
            WriteLiteral(@"oint(vcart))+
                     formatfloat('00000000',vnosson)+vdv_nosson;
        end
     else if vnumbco=33 then
        begin
             result:=formatfloat('000',vnumbco)+vmoeda+formatfloat('0000',vfatorvenc)+FormatFloat('0000000000',vvltitulo)+'9'+
                     formatfloat('0000000',vccbco)+formatfloat('000000000000',vnosson)+vdv_nosson+'0'+formatfloat('000',strToint(vcart));
        end
     else if vnumbco=237 then
        begin
             result:=formatfloat('000',vnumbco)+vmoeda+formatfloat('0000',vfatorvenc)+FormatFloat('0000000000',vvltitulo);
             result:=result+formatfloat('0000',vagbco)+formatfloat('00',strToint(vcart))+formatfloat('00000000000',vnosson)+formatfloat('0000000',vccbco)+'0';
        end
     else if vnumbco=409 then
        begin
             result:=formatfloat('000',vnumbco)+vmoeda+formatfloat('0000',vfatorvenc)+FormatFloat('0000000000',vvltitulo);
             result:=result+formatfloat('0',strToint(vcart))+formatfloat('000000',vccbco)+vd");
            WriteLiteral(@"v_cc+'00'+formatfloat('00000000000000',vnosson)+vdv_nosson;
        end;
end;

function CalculaDV11B9(numero_base : string): string;
var
    i, tamanho_num, peso, soma, resto, res: integer;
begin
    tamanho_num := length(numero_base);
    peso := 2;
    soma := 0;
    for i := (tamanho_num) downto 1 do
        begin
             soma := soma + (StrToInt(numero_base[i]) * peso);
             if peso = 9 then
                peso := 2
             else
                peso := peso + 1;
        end;
    resto := soma mod 11;
    if (resto = 0) or (resto = 1) then
       res := 0
    else
       res := (11 - resto);
    if ((res = 0) or
       (res = 1) or
       (res = 10) or
       (res = 11)) then
       result := '1'
    else
       result := intTostr(res);
end;

function CalculaDV11B7(numero_base : string): string;
var
    i, tamanho_num, peso, soma, resto : integer;
begin
    tamanho_num := length(numero_base);
    peso := 2;
    soma := 0;
    for i := (tamanho_num)");
            WriteLiteral(@" downto 1 do
        begin
             soma := soma + (StrToInt(numero_base[i]) * peso);
             if peso = 7 then
                peso := 2
             else
                peso := peso + 1;
        end;
    resto := soma mod 11;
    if (resto = 1) then
        result := 'P'
    else if (resto = 0) then
        result := '0'
    else
        result := intTostr(11 - resto);
end;

function VerificaDV11(entrada : string): boolean;
var
   parte_ini, parte_fin : string;
begin
    parte_ini := Copy(entrada, 1, Length(entrada)-1);
    parte_fin := Copy(entrada, Length(entrada), 1);
    if StrToInt(parte_fin) = strToint(CalculaDV11B9(parte_ini)) then
       Result := true
    else
       Result := false;
end;


function Modulo10(S: String): String;
var
   Indice: ShortInt;
   Peso: ShortInt;
   Soma: Integer;
   Total: ShortInt;
   DV: ShortInt;
begin
     Soma := 0;
     Peso := 2;
     for Indice := Length(S) downto 1 do
         begin
              Total := StrToInt");
            WriteLiteral(@"(Copy(S, Indice, 1)) * Peso;
              if Total > 9 then
                 begin
                     Soma := Soma + 1 + (Total - 10);
                 end
              else
                 begin
                     Soma := Soma + Total;
                 end;
              if Peso = 1 then
                 begin
                     Peso := 2
                 end
              else
                 begin
                     Peso := 1;
                 end;
         end;
     DV := 10 - Soma Mod 10;
     if DV = 10 then
        begin
            DV := 0;
        end;
     Result := intTostr(DV);
end;

function DifDateUtil(dataini,datafin:string):integer;
var a,b,c:tdatetime;
  ct,s:integer;
begin
if StrToDate(DataFin) < StrtoDate(DataIni) then
  begin
  Result");
            BeginWriteAttribute(":", " :=", 79004, "", 79007, 0);
            EndWriteAttribute();
            WriteLiteral(" 0;\r\n  exit;\r\n  end;\r\nct");
            BeginWriteAttribute(":", " :=", 79031, "", 79034, 0);
            EndWriteAttribute();
            WriteLiteral(" 0;\r\ns");
            BeginWriteAttribute(":", " :=", 79040, "", 79043, 0);
            EndWriteAttribute();
            WriteLiteral(" 1;\r\na");
            BeginWriteAttribute(":", " :=", 79049, "", 79052, 0);
            EndWriteAttribute();
            WriteLiteral(" strtodate(dataFin);\r\nb");
            BeginWriteAttribute(":", " :=", 79075, "", 79078, 0);
            EndWriteAttribute();
            WriteLiteral(@" strtodate(dataIni);
if a > b then
  begin
  c := a;
  a := b;
  b := c;
  s := 1;
  end;
a := a + 1;
while (dayofweek(a)<>2) and (a <= b) do
  begin
  if dayofweek(a) in [2..6] then
  begin
  inc(ct);
  end;
  a := a + 1;
  end;
ct := ct + round((5*int((b-a)/7)));
a := a + (7*int((b-a)/7));
while a <= b do
  begin
  if dayofweek(a) in [2..6] then
  begin
  inc(ct);
  end;
  a := a + 1;
  end;
if ct < 0 then
  begin
  ct");
            BeginWriteAttribute(":", " :=", 79531, "", 79534, 0);
            EndWriteAttribute();
            WriteLiteral(" 0;\r\n  end;\r\nresult");
            BeginWriteAttribute(":", " :=", 79553, "", 79556, 0);
            EndWriteAttribute();
            WriteLiteral(" s*ct;\r\nend;\r\n\r\nend.\r\n\r\n\r\n\r\n\r\n</textarea>\r\n</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
